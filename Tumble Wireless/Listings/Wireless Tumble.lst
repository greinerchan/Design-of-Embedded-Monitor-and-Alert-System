C51 COMPILER V9.57.0.0   WIRELESS_TUMBLE                                                   04/19/2018 20:18:46 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE WIRELESS_TUMBLE
OBJECT MODULE PLACED IN .\Objects\Wireless Tumble.obj
COMPILER INVOKED BY: C:\EE\Keil\C51\BIN\C51.EXE Wireless Tumble.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Li
                    -stings\Wireless Tumble.lst) TABS(2) OBJECT(.\Objects\Wireless Tumble.obj)

line level    source

   1          //****************************************  
   2          // Update to MPU6050 by shinetop  
   3          // MCU: STC89C52  
   4          // 2012.3.1  
   5          // ??: ???????????10?????  
   6          //****************************************  
   7          // ?????STC89C52  
   8          // ??:11.0592M  
   9          // ??:??  
  10          // ???? Keil uVision2  
  11          //****************************************  
  12          #include <REG52.H>      
  13          #include <math.h>    //Keil library    
  14          #include <stdio.h>   //Keil library     
  15          #include <INTRINS.H>  
  16          typedef unsigned char  uchar;  
  17          typedef unsigned short ushort;  
  18          typedef unsigned int   uint;  
  19          //****************************************  
  20          // ??51?????  
  21          //****************************************  
  22          sbit    SCL=P1^5;           //IIC??????  
  23          sbit    SDA=P1^4;           //IIC??????  
  24          //****************************************  
  25          // ??MPU6050????  
  26          //****************************************  
  27          #define SMPLRT_DIV      0x19    //??????,???:0x07(125Hz)  
  28          #define CONFIG          0x1A    //??????,???:0x06(5Hz)  
  29          #define GYRO_CONFIG     0x1B    //??????????,???:0x18(???,2000deg/s)  
  30          #define ACCEL_CONFIG    0x1C    //?????????????????,???:0x01(???,2G,5Hz)  
  31          #define ACCEL_XOUT_H    0x3B  
  32          #define ACCEL_XOUT_L    0x3C  
  33          #define ACCEL_YOUT_H    0x3D  
  34          #define ACCEL_YOUT_L    0x3E  
  35          #define ACCEL_ZOUT_H    0x3F  
  36          #define ACCEL_ZOUT_L    0x40  
  37          #define TEMP_OUT_H      0x41  
  38          #define TEMP_OUT_L      0x42  
  39          #define GYRO_XOUT_H     0x43  
  40          #define GYRO_XOUT_L     0x44      
  41          #define GYRO_YOUT_H     0x45  
  42          #define GYRO_YOUT_L     0x46  
  43          #define GYRO_ZOUT_H     0x47  
  44          #define GYRO_ZOUT_L     0x48  
  45          #define PWR_MGMT_1      0x6B    //????,???:0x00(????)  
  46          #define WHO_AM_I        0x75    //IIC?????(????0x68,??)  
  47          #define SlaveAddress    0xD0    //IIC??????????,+1???  
  48          //**************************************************************************************************  
  49          //???????  
  50          //**************************************************************************************************  
  51          uchar dis[6];                   //????(-511?512)?????  
  52          int dis_data;                   //??  
  53          //**************************************************************************************************  
  54          //????  
C51 COMPILER V9.57.0.0   WIRELESS_TUMBLE                                                   04/19/2018 20:18:46 PAGE 2   

  55          //**************************************************************************************************  
  56          void  Delay5us();  
  57          void  delay(unsigned int k);                                        //??                          
  58          void  lcd_printf(uchar *s,int temp_data);  
  59          //********************************MPU6050????***************************************************  
  60          void  InitMPU6050();                                            //???MPU6050  
  61          void  I2C_Start();  
  62          void  I2C_Stop();  
  63          void  I2C_SendACK(bit ack);  
  64          bit   I2C_RecvACK();  
  65          void  I2C_SendByte(uchar dat);  
  66          uchar I2C_RecvByte();  
  67          void  I2C_ReadPage();  
  68          void  I2C_WritePage();  
  69            
  70          void  display_ACCEL_x();  
  71          void  display_ACCEL_y();  
  72          void  display_ACCEL_z();  
  73          uchar Single_ReadI2C(uchar REG_Address);                        //??I2C??  
  74          void  Single_WriteI2C(uchar REG_Address,uchar REG_data);        //?I2C????  
  75          //********************************************************************************  
  76          //??????  
  77          //********************************************************************************  
  78          void lcd_printf(uchar *s,int temp_data)  
  79          {  
  80   1          if(temp_data<0)  
  81   1          {  
  82   2              temp_data=-temp_data;  
  83   2              *s='-';  
  84   2          }  
  85   1          else *s=' ';  
  86   1        
  87   1          *++s =temp_data/10000+0x30;  
  88   1          temp_data=temp_data%10000;     //????  
  89   1        
  90   1          *++s =temp_data/1000+0x30;  
  91   1          temp_data=temp_data%1000;     //????  
  92   1        
  93   1          *++s =temp_data/100+0x30;  
  94   1          temp_data=temp_data%100;     //????  
  95   1          *++s =temp_data/10+0x30;  
  96   1          temp_data=temp_data%10;      //????  
  97   1          *++s =temp_data+0x30;     
  98   1      }  
  99          //******************************************************************************************************  
 100          //?????  
 101          //******************************************************************************************************* 
             - 
 102          void init_uart()  
 103          {  
 104   1          TMOD=0x21;                
 105   1          TH1=0xfd;       //?????9600(????11.0592MHZ)       
 106   1          TL1=0xfd;         
 107   1                
 108   1          SCON=0x50;  
 109   1          PS=1;      //???????????  
 110   1          TR0=1;     //?????            
 111   1          TR1=1;  
 112   1          ET0=1;     //?????0??             
 113   1          ES=1;     
 114   1          EA=1;  
 115   1      }  
C51 COMPILER V9.57.0.0   WIRELESS_TUMBLE                                                   04/19/2018 20:18:46 PAGE 3   

 116          //*************************************************************************************************  
 117          //??????  
 118          //*************************************************************************************************  
 119          void  SeriPushSend(uchar send_data)  
 120          {  
 121   1          SBUF=send_data;    
 122   1          while(!TI);TI=0;        
 123   1      }  
 124          //*************************************************************************************************  
 125          //************************************??*********************************************************  
 126          //*************************************************************************************************  
 127          void delay(unsigned int k)    
 128          {                         
 129   1          unsigned int i,j;                 
 130   1          for(i=0;i<k;i++)  
 131   1          {             
 132   2              for(j=0;j<121;j++);  
 133   2          }                         
 134   1      }  
 135          //************************************************************************************************  
 136          //??5??(STC90C52RC@12M)  
 137          //???????,???????  
 138          //?????1T?MCU?,????????  
 139          //************************************************************************************************  
 140          void Delay5us()  
 141          {  
 142   1          _nop_();_nop_();_nop_();_nop_();  
 143   1          _nop_();_nop_();_nop_();_nop_();  
 144   1          _nop_();_nop_();_nop_();_nop_();  
 145   1          _nop_();_nop_();_nop_();_nop_();  
 146   1          _nop_();_nop_();_nop_();_nop_();  
 147   1          _nop_();_nop_();_nop_();_nop_();  
 148   1      }  
 149          //*************************************************************************************************  
 150          //I2C????  
 151          //*************************************************************************************************  
 152          void I2C_Start()  
 153          {  
 154   1          SDA = 1;                    //?????  
 155   1          SCL = 1;                    //?????  
 156   1          Delay5us();                 //??  
 157   1          SDA = 0;                    //?????  
 158   1          Delay5us();                 //??  
 159   1          SCL = 0;                    //?????  
 160   1      }  
 161          //*************************************************************************************************  
 162          //I2C????  
 163          //*************************************************************************************************  
 164          void I2C_Stop()  
 165          {  
 166   1          SDA = 0;                    //?????  
 167   1          SCL = 1;                    //?????  
 168   1          Delay5us();                 //??  
 169   1          SDA = 1;                    //?????  
 170   1          Delay5us();                 //??  
 171   1      }  
 172          //**************************************************************************************************  
 173          //I2C??????  
 174          //????:ack (0:ACK 1:NAK)  
 175          //**************************************************************************************************  
 176          void I2C_SendACK(bit ack)  
 177          {  
C51 COMPILER V9.57.0.0   WIRELESS_TUMBLE                                                   04/19/2018 20:18:46 PAGE 4   

 178   1          SDA = ack;                  //?????  
 179   1          SCL = 1;                    //?????  
 180   1          Delay5us();                 //??  
 181   1          SCL = 0;                    //?????  
 182   1          Delay5us();                 //??  
 183   1      }  
 184          //****************************************************************************************************  
 185          //I2C??????  
 186          //****************************************************************************************************  
 187          bit I2C_RecvACK()  
 188          {  
 189   1          SCL = 1;                    //?????  
 190   1          Delay5us();                 //??  
 191   1          CY = SDA;                   //?????  
 192   1          SCL = 0;                    //?????  
 193   1          Delay5us();                 //??  
 194   1          return CY;  
 195   1      }  
 196          //*****************************************************************************************************  
 197          //?I2C??????????  
 198          //*****************************************************************************************************  
 199          void I2C_SendByte(uchar dat)  
 200          {  
 201   1          uchar i;  
 202   1          for (i=0; i<8; i++)         //8????  
 203   1          {  
 204   2              dat <<= 1;              //????????  
 205   2              SDA = CY;               //????  
 206   2              SCL = 1;                //?????  
 207   2              Delay5us();             //??  
 208   2              SCL = 0;                //?????  
 209   2              Delay5us();             //??  
 210   2          }  
 211   1          I2C_RecvACK();  
 212   1      }  
 213          //*****************************************************************************************************  
 214          //?I2C??????????  
 215          //******************************************************************************************************  
 216          uchar I2C_RecvByte()  
 217          {  
 218   1          uchar i;  
 219   1          uchar dat = 0;  
 220   1          SDA = 1;                    //??????,??????,  
 221   1          for (i=0; i<8; i++)         //8????  
 222   1          {  
 223   2              dat <<= 1;  
 224   2              SCL = 1;                //?????  
 225   2              Delay5us();             //??  
 226   2              dat |= SDA;             //???                 
 227   2              SCL = 0;                //?????  
 228   2              Delay5us();             //??  
 229   2          }  
 230   1          return dat;  
 231   1      }  
 232          //*****************************************************************************************************  
 233          //?I2C??????????  
 234          //*****************************************************************************************************  
 235          void Single_WriteI2C(uchar REG_Address,uchar REG_data)  
 236          {  
 237   1          I2C_Start();                  //????  
 238   1          I2C_SendByte(SlaveAddress);   //??????+???  
 239   1          I2C_SendByte(REG_Address);    //???????,  
C51 COMPILER V9.57.0.0   WIRELESS_TUMBLE                                                   04/19/2018 20:18:46 PAGE 5   

 240   1          I2C_SendByte(REG_data);       //???????,  
 241   1          I2C_Stop();                   //??????  
 242   1      }  
 243          //******************************************************************************************************* 
             - 
 244          //?I2C??????????  
 245          //******************************************************************************************************* 
             - 
 246          uchar Single_ReadI2C(uchar REG_Address)  
 247          {  
 248   1          uchar REG_data;  
 249   1          I2C_Start();                   //????  
 250   1          I2C_SendByte(SlaveAddress);    //??????+???  
 251   1          I2C_SendByte(REG_Address);     //????????,?0??    
 252   1          I2C_Start();                   //????  
 253   1          I2C_SendByte(SlaveAddress+1);  //??????+???  
 254   1          REG_data=I2C_RecvByte();       //???????  
 255   1          I2C_SendACK(1);                //??????  
 256   1          I2C_Stop();                    //????  
 257   1          return REG_data;  
 258   1      }  
 259          //******************************************************************************************************  
 260          //???MPU6050  
 261          //******************************************************************************************************  
 262          void InitMPU6050()  
 263          {  
 264   1          Single_WriteI2C(PWR_MGMT_1, 0x00);  //??????  
 265   1          Single_WriteI2C(SMPLRT_DIV, 0x07);  
 266   1          Single_WriteI2C(CONFIG, 0x06);  
 267   1          Single_WriteI2C(GYRO_CONFIG, 0x18);  
 268   1          Single_WriteI2C(ACCEL_CONFIG, 0x01);  
 269   1      }  
 270          //******************************************************************************************************  
 271          //????  
 272          //******************************************************************************************************  
 273          int GetData(uchar REG_Address)  
 274          {  
 275   1          uchar H,L;  
 276   1          H=Single_ReadI2C(REG_Address);  
 277   1          L=Single_ReadI2C(REG_Address+1);  
 278   1          return ((H<<8)+L);   //????  
 279   1      }  
 280          //******************************************************************************************************  
 281          //????(??????)???10???  
 282          //******************************************************************************************************  
 283          void Display10BitData(int value)  
 284          {  uchar i;  
 285   1      //  value/=64;                          //???10???  
 286   1          lcd_printf(dis, value);         //??????  
 287   1          for(i=0;i<6;i++)  
 288   1          {  
 289   2          SeriPushSend(dis[i]);  
 290   2          }  
 291   1        
 292   1        //    DisplayListChar(x,y,dis,4); //???,?,????,????  
 293   1      }  
 294          //******************************************************************************************************* 
             - 
 295          //???  
 296          //******************************************************************************************************* 
             - 
 297          void main()  
C51 COMPILER V9.57.0.0   WIRELESS_TUMBLE                                                   04/19/2018 20:18:46 PAGE 6   

 298          {   
 299   1          delay(500);     //????        
 300   1          init_uart();  
 301   1          InitMPU6050();  //???MPU6050  
 302   1          delay(150);  
 303   1          while(1)  
 304   1          {  
 305   2              SeriPushSend('A');    
 306   2              SeriPushSend(0x20);SeriPushSend('X'); SeriPushSend(':');   
 307   2              Display10BitData(GetData(ACCEL_XOUT_H));    //??X????  
 308   2              SeriPushSend(0x20);SeriPushSend('Y'); SeriPushSend(':');  
 309   2              Display10BitData(GetData(ACCEL_YOUT_H));    //??Y????  
 310   2              SeriPushSend(0x20);SeriPushSend('Z'); SeriPushSend(':');  
 311   2              Display10BitData(GetData(ACCEL_ZOUT_H));    //??Z????  
 312   2              SeriPushSend(0x20);   
 313   2              SeriPushSend('G');    
 314   2              SeriPushSend(0x20);SeriPushSend('X'); SeriPushSend(':');  
 315   2              Display10BitData(GetData(GYRO_XOUT_H));     //??X????  
 316   2              SeriPushSend(0x20);SeriPushSend('Y'); SeriPushSend(':');  
 317   2              Display10BitData(GetData(GYRO_YOUT_H));     //??Y????  
 318   2              SeriPushSend(0x20);SeriPushSend('Z'); SeriPushSend(':');  
 319   2              Display10BitData(GetData(GYRO_ZOUT_H));     //??Z????          
 320   2              SeriPushSend(0x0d);   
 321   2              SeriPushSend(0x0a);//??,??  
 322   2              delay(2000);  
 323   2          }  
 324   1      }  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    756    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
